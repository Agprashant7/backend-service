{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/auth/auth.sevice\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction NavbarComponent_li_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 6)(1, \"a\", 10);\n    i0.ɵɵtext(2, \"Sign Up\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction NavbarComponent_li_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 6)(1, \"a\", 11);\n    i0.ɵɵtext(2, \"Login\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction NavbarComponent_li_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 6)(1, \"a\", 12);\n    i0.ɵɵtext(2, \"Manage Task\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction NavbarComponent_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 13)(1, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function NavbarComponent_span_12_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onLogOut());\n    });\n    i0.ɵɵtext(2, \"Log Out\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class NavbarComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.currentRoute = '';\n    // @Input() logStatus:boolean=false; // decorate the property with @Input()\n    this.countChanged = new EventEmitter();\n    this.logStatus = this.authService.isLoggedIn();\n  }\n  ngOnInit() {\n    this.logStatus = this.authService.isLoggedIn();\n  }\n  ngDoCheck() {\n    this.logStatus = this.authService.isLoggedIn();\n    this.currentRoute = this.router.url;\n    console.log('current route', this.currentRoute);\n  }\n  onLogOut() {\n    console.log(\"INSIDE LOG OUT\");\n    localStorage.clear();\n    this.logStatus = this.authService.isLoggedIn();\n    this.router.navigate(['/login']);\n  }\n}\nNavbarComponent.ɵfac = function NavbarComponent_Factory(t) {\n  return new (t || NavbarComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n};\nNavbarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NavbarComponent,\n  selectors: [[\"app-navbar\"]],\n  outputs: {\n    countChanged: \"countChanged\"\n  },\n  decls: 13,\n  vars: 4,\n  consts: [[1, \"navbar\", \"navbar-expand-lg\", \"bg-body-tertiary\", \"bg-primary-subtle\", \"mb-5\"], [1, \"container-fluid\"], [\"type\", \"button\", \"data-bs-toggle\", \"collapse\", \"data-bs-target\", \"#navbarText\", \"aria-controls\", \"navbarText\", \"aria-expanded\", \"false\", \"aria-label\", \"Toggle navigation\", 1, \"navbar-toggler\"], [1, \"navbar-toggler-icon\"], [\"id\", \"navbarText\", 1, \"collapse\", \"navbar-collapse\"], [1, \"navbar-nav\", \"me-auto\", \"mb-2\", \"mb-lg-0\"], [1, \"nav-item\"], [\"aria-current\", \"page\", \"routerLink\", \"/home\", \"routerLinkActive\", \"active\", 1, \"nav-link\"], [\"class\", \"nav-item\", 4, \"ngIf\"], [\"class\", \"navbar-text\", 4, \"ngIf\"], [\"routerLinkActive\", \"active\", \"routerLink\", \"/signup\", 1, \"nav-link\"], [\"routerLinkActive\", \"active\", \"routerLink\", \"/login\", 1, \"nav-link\"], [\"routerLink\", \"/manageTask\", \"routerLinkActive\", \"active\", 1, \"nav-link\"], [1, \"navbar-text\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-danger\", 3, \"click\"]],\n  template: function NavbarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"nav\", 0)(1, \"div\", 1)(2, \"button\", 2);\n      i0.ɵɵelement(3, \"span\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"ul\", 5)(6, \"li\", 6)(7, \"a\", 7);\n      i0.ɵɵtext(8, \"Home\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(9, NavbarComponent_li_9_Template, 3, 0, \"li\", 8);\n      i0.ɵɵtemplate(10, NavbarComponent_li_10_Template, 3, 0, \"li\", 8);\n      i0.ɵɵtemplate(11, NavbarComponent_li_11_Template, 3, 0, \"li\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(12, NavbarComponent_span_12_Template, 3, 0, \"span\", 9);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngIf\", ctx.currentRoute === \"/login\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.currentRoute === \"/signup\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.logStatus);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.logStatus);\n    }\n  },\n  dependencies: [i3.NgIf, i2.RouterLink, i2.RouterLinkActive],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAiCA,YAAY,QAAQ,eAAe;;;;;;;ICW1DC,6BAAsD;IACgBA,uBAAO;IAAAA,iBAAI;;;;;IAEjFA,6BAAuD;IACcA,qBAAK;IAAAA,iBAAI;;;;;IAE9EA,6BAAuC;IACkCA,2BAAW;IAAAA,iBAAI;;;;;;IAG1FA,gCAA6C;IACYA;MAAAA;MAAA;MAAA,OAASA,gCAAU;IAAA,EAAC;IAACA,uBAAO;IAAAA,iBAAS;;;ADdtG,OAAM,MAAOC,eAAe;EAE1BC,YAAoBC,WAAuB,EAASC,MAAa;IAA7C,gBAAW,GAAXD,WAAW;IAAqB,WAAM,GAANC,MAAM;IAD1D,iBAAY,GAAK,EAAE;IAInB;IACU,iBAAY,GAAC,IAAIL,YAAY,EAAE;IACzC,cAAS,GAAC,IAAI,CAACI,WAAW,CAACE,UAAU,EAAE;EAHvC;EAIAC,QAAQ;IACN,IAAI,CAACC,SAAS,GAAC,IAAI,CAACJ,WAAW,CAACE,UAAU,EAAE;EAE9C;EACAG,SAAS;IACP,IAAI,CAACD,SAAS,GAAC,IAAI,CAACJ,WAAW,CAACE,UAAU,EAAE;IAC5C,IAAI,CAACI,YAAY,GAAC,IAAI,CAACL,MAAM,CAACM,GAAG;IACjCC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAC,IAAI,CAACH,YAAY,CAAC;EAChD;EAEAI,QAAQ;IACNF,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC7BE,YAAY,CAACC,KAAK,EAAE;IACpB,IAAI,CAACR,SAAS,GAAC,IAAI,CAACJ,WAAW,CAACE,UAAU,EAAE;IAC5C,IAAI,CAACD,MAAM,CAACY,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAElC;;AAxBWf,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAgB;EAAAC;IAAAC;EAAA;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCR5BvB,8BAA6E;MAIrEA,0BAAyC;MAC3CA,iBAAS;MACTA,8BAAsD;MAGuCA,oBAAI;MAAAA,iBAAI;MAEjGA,8DAEK;MACLA,gEAEK;MACLA,gEAEK;MACPA,iBAAK;MACLA,oEAEO;MACTA,iBAAM;;;MAboBA,eAA6B;MAA7BA,oDAA6B;MAG7BA,eAA8B;MAA9BA,qDAA8B;MAG9BA,eAAe;MAAfA,oCAAe;MAIZA,eAAe;MAAfA,oCAAe","names":["EventEmitter","i0","NavbarComponent","constructor","authService","router","isLoggedIn","ngOnInit","logStatus","ngDoCheck","currentRoute","url","console","log","onLogOut","localStorage","clear","navigate","selectors","outputs","countChanged","decls","vars","consts","template"],"sourceRoot":"","sources":["E:\\Prashant Ganiger\\Portfolio\\Task-Management-Angualr\\src\\app\\component\\navbar\\navbar.component.ts","E:\\Prashant Ganiger\\Portfolio\\Task-Management-Angualr\\src\\app\\component\\navbar\\navbar.component.html"],"sourcesContent":["import { Component, Input,Output,EventEmitter } from '@angular/core';\r\nimport { AuthService } from 'src/app/service/auth/auth.sevice';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent {\r\n  currentRoute:any=''\r\n  constructor(private authService:AuthService,private router:Router){\r\n    \r\n  }\r\n  // @Input() logStatus:boolean=false; // decorate the property with @Input()\r\n  @Output() countChanged=new EventEmitter();\r\n  logStatus=this.authService.isLoggedIn()\r\n  ngOnInit(){\r\n    this.logStatus=this.authService.isLoggedIn()\r\n    \r\n  }\r\n  ngDoCheck(){\r\n    this.logStatus=this.authService.isLoggedIn()\r\n    this.currentRoute=this.router.url\r\n    console.log('current route',this.currentRoute)\r\n  }\r\n\r\n  onLogOut(){\r\n    console.log(\"INSIDE LOG OUT\")\r\n    localStorage.clear()\r\n    this.logStatus=this.authService.isLoggedIn()\r\n    this.router.navigate(['/login'])\r\n    \r\n  }\r\n}\r\n","<nav class=\"navbar navbar-expand-lg bg-body-tertiary bg-primary-subtle mb-5\">\r\n    <div class=\"container-fluid\">\r\n      <!-- <a class=\"navbar-brand\" href=\"#\">Navbar w/ text</a> -->\r\n      <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div class=\"collapse navbar-collapse\" id=\"navbarText\">\r\n        <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link \" aria-current=\"page\" routerLink=\"/home\" routerLinkActive=\"active\" >Home</a>\r\n          </li>\r\n          <li class=\"nav-item\" *ngIf=\"currentRoute==='/login'\" >\r\n            <a class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/signup\">Sign Up</a>\r\n          </li>\r\n          <li class=\"nav-item\" *ngIf=\"currentRoute==='/signup'\" >\r\n            <a class=\"nav-link\"  routerLinkActive=\"active\" routerLink=\"/login\">Login</a>\r\n          </li>\r\n          <li class=\"nav-item\" *ngIf=\"logStatus\">\r\n            <a class=\"nav-link\" routerLink=\"/manageTask\" routerLinkActive=\"active\">Manage Task</a>\r\n          </li>\r\n        </ul>\r\n        <span class=\"navbar-text\" *ngIf=\"logStatus\" >\r\n            <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"onLogOut()\">Log Out</button>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}