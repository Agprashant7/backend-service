{"ast":null,"code":"import { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let CrudService = /*#__PURE__*/(() => {\n  class CrudService {\n    constructor(http) {\n      this.http = http;\n      // this.serviceURL='https://643fd869b9e6d064be006110.mockapi.io/tasks/task'\n      this.serviceURL = 'http://localhost:5000/task';\n    }\n    addTasks(task) {\n      let headers = new Headers();\n      let token = localStorage.getItem('token');\n      return this.http.post(`${this.serviceURL}/addTask`, task, {\n        headers: new HttpHeaders().set('Authorization', token ? token : '')\n      });\n    }\n    getAllTask() {\n      let headers = new Headers();\n      let token = localStorage.getItem('token');\n      return this.http.get(`${this.serviceURL}/getTask`, {\n        headers: new HttpHeaders().set('Authorization', token ? token : '')\n      });\n    }\n    deleteTask(task) {\n      const params = new HttpParams().set('id', task.taskId);\n      let headers = new Headers();\n      let token = localStorage.getItem('token');\n      return this.http.delete(this.serviceURL + '/deleteTask', {\n        headers: new HttpHeaders().set('Authorization', token ? token : ''),\n        params\n      });\n    }\n    editTask(task) {\n      let headers = new Headers();\n      let token = localStorage.getItem('token');\n      return this.http.put(this.serviceURL + '/editTask', task, {\n        headers: new HttpHeaders().set('Authorization', token ? token : '')\n      });\n    }\n  }\n  CrudService.ɵfac = function CrudService_Factory(t) {\n    return new (t || CrudService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  CrudService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CrudService,\n    factory: CrudService.ɵfac,\n    providedIn: 'root'\n  });\n  return CrudService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}