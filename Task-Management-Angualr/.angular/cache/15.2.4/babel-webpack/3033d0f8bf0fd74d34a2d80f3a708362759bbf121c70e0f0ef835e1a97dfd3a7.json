{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CrudService {\n  constructor(http) {\n    this.http = http;\n    this.serviceURL = 'https://643fd869b9e6d064be006110.mockapi.io/tasks/task';\n  }\n  addTasks(task) {\n    let headers = new Headers();\n    let token = localStorage.getItem('token');\n    return this.http.post('http://localhost:5000/task/addTask', task, {\n      headers: new HttpHeaders().set('Authorization', token ? token : '')\n    });\n  }\n  getAllTask() {\n    return this.http.get(this.serviceURL);\n  }\n  deleteTask(task) {\n    return this.http.delete(this.serviceURL + '/' + task.id);\n  }\n  editTask(task) {\n    return this.http.put(this.serviceURL + '/' + task.id, task);\n  }\n}\nCrudService.ɵfac = function CrudService_Factory(t) {\n  return new (t || CrudService)(i0.ɵɵinject(i1.HttpClient));\n};\nCrudService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CrudService,\n  factory: CrudService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAoBA,WAAW,QAAS,sBAAsB;;;AAS9D,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,IAAe;IAAf,SAAI,GAAJA,IAAI;IACtB,IAAI,CAACC,UAAU,GAAC,wDAAwD;EAE1E;EAEAC,QAAQ,CAACC,IAAS;IACf,IAAIC,OAAO,GAAG,IAAIC,OAAO,EAAE;IAC3B,IAAIC,KAAK,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAO,oCAAoC,EAACN,IAAI,EAAC;MACpEC,OAAO,EAAE,IAAIP,WAAW,EAAE,CAACa,GAAG,CAAC,eAAe,EAACJ,KAAK,GAACA,KAAK,GAAC,EAAE;KAChE,CAAC;EACF;EACAK,UAAU;IACR,OAAO,IAAI,CAACX,IAAI,CAACY,GAAG,CAAS,IAAI,CAACX,UAAU,CAAC;EAC/C;EACAY,UAAU,CAACV,IAAS;IAClB,OAAO,IAAI,CAACH,IAAI,CAACc,MAAM,CAAO,IAAI,CAACb,UAAU,GAAC,GAAG,GAACE,IAAI,CAACY,EAAE,CAAC;EAC5D;EACAC,QAAQ,CAACb,IAAS;IAChB,OAAO,IAAI,CAACH,IAAI,CAACiB,GAAG,CAAO,IAAI,CAAChB,UAAU,GAAC,GAAG,GAACE,IAAI,CAACY,EAAE,EAACZ,IAAI,CAAC;EAC9D;;AAxBWL,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAoB,SAAXpB,WAAW;EAAAqB,YAFV;AAAM","names":["HttpHeaders","CrudService","constructor","http","serviceURL","addTasks","task","headers","Headers","token","localStorage","getItem","post","set","getAllTask","get","deleteTask","delete","id","editTask","put","factory","providedIn"],"sourceRoot":"","sources":["E:\\Prashant Ganiger\\Portfolio\\Task-Management-Angualr\\src\\app\\service\\crud\\crud.service.ts"],"sourcesContent":["import { HttpClient,HttpHeaders  } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Task } from '../../model/task';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CrudService {\r\n  \r\n  serviceURL:string;  \r\n  constructor(private http:HttpClient) { \r\n    this.serviceURL='https://643fd869b9e6d064be006110.mockapi.io/tasks/task'\r\n\r\n  }\r\n\r\n  addTasks(task:Task):Observable<Task>{\r\n     let headers = new Headers();\r\n     let token =  localStorage.getItem('token');\r\n  \r\n    return this.http.post<Task>('http://localhost:5000/task/addTask',task,{\r\n      headers: new HttpHeaders().set('Authorization',token?token:'')\r\n  })\r\n  }\r\n  getAllTask():Observable<Task[]>{\r\n    return this.http.get<Task[]>(this.serviceURL)\r\n  }\r\n  deleteTask(task:Task):Observable<Task>{\r\n    return this.http.delete<Task>(this.serviceURL+'/'+task.id)\r\n  }\r\n  editTask(task:Task):Observable<Task>{\r\n    return this.http.put<Task>(this.serviceURL+'/'+task.id,task)\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}