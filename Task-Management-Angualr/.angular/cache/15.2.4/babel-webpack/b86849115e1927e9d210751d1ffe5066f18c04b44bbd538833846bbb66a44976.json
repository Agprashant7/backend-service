{"ast":null,"code":"import { Task } from 'src/app/model/task';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/crud/crud.service\";\nimport * as i2 from \"src/app/service/auth/auth.sevice\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"./todocard/todocard.component\";\nfunction DashboardComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_18_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.addTask());\n    });\n    i0.ɵɵtext(2, \"Add\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", true);\n  }\n}\nfunction DashboardComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_19_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.addTask());\n    });\n    i0.ɵɵtext(2, \"Add\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", false);\n  }\n}\nexport let DashboardComponent = /*#__PURE__*/(() => {\n  class DashboardComponent {\n    constructor(crudService, authService) {\n      this.crudService = crudService;\n      this.authService = authService;\n      this.taskObj = new Task();\n      this.taskArr = [];\n      this.addTaskValue = '';\n      this.editTaskValue = '';\n    }\n    ngOnInit() {\n      this.taskObj = new Task();\n      // this.taskArr=[];\n      this.getAllTask();\n      this.editTaskValue = '';\n    }\n    getAllTask() {\n      this.crudService.getAllTask().subscribe(res => {\n        this.taskArr = res.data;\n      }, err => {\n        alert(\"UNABLE TO GET LIST\");\n      });\n    }\n    addTask() {\n      this.taskObj.taskName = this.addTaskValue;\n      this.taskObj.dueDate = this.addDueDate;\n      this.taskObj.date = new Date();\n      this.crudService.addTasks(this.taskObj).subscribe(res => {\n        this.ngOnInit();\n        this.addTaskValue = '';\n        this.addDueDate;\n      }, err => {\n        alert(err);\n      });\n    }\n    editTask(taskObj) {\n      // this.taskObj.task_name=this.editTaskValue\n      this.crudService.editTask(taskObj).subscribe(res => {\n        this.ngOnInit();\n      }, err => {\n        alert(\"FAILDED TO EDIT\");\n      });\n    }\n    deleteTask(task) {\n      this.taskObj = task;\n      // console.log(task)\n      this.crudService.deleteTask(this.taskObj).subscribe(res => {\n        this.ngOnInit();\n      }, err => {\n        alert(\"FAILDED TO Delete\");\n      });\n    }\n  }\n  DashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.CrudService), i0.ɵɵdirectiveInject(i2.AuthService));\n  };\n  DashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 22,\n    vars: 5,\n    consts: [[1, \"container-fluid\", \"bg-light\"], [1, \"container\", \"bg-light\"], [1, \"row\", \"mt-4\", 2, \"height\", \"500px\"], [1, \"col\"], [1, \"col-md-6\", \"bg-white\", \"shadow\"], [1, \"card\", \"bg-warning\", \"mt-4\"], [1, \"text-white\", \"ps-3\", \"pt-2\", \"pb-2\"], [1, \"shadow\", \"mt-2\"], [1, \"input-group\", \"flex-column\", \"p-4\", \"gap-2\"], [\"type\", \"text\", \"placeholder\", \"Enter Task\", \"name\", \"task\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"date\", \"placeholder\", \"Enter Due Date\", \"name\", \"dueDate\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"text-center mt-4\", 4, \"ngIf\"], [3, \"taskArray\", \"deleteObj\", \"editObj\"], [1, \"text-center\", \"mt-4\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", 3, \"disabled\", \"click\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵelement(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4)(5, \"div\", 5)(6, \"h4\", 6);\n        i0.ɵɵtext(7, \" Task Creation \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 7)(9, \"div\", 8)(10, \"div\")(11, \"label\");\n        i0.ɵɵtext(12, \"Task Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_13_listener($event) {\n          return ctx.addTaskValue = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\")(15, \"label\");\n        i0.ɵɵtext(16, \"Due Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"input\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_17_listener($event) {\n          return ctx.addDueDate = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(18, DashboardComponent_div_18_Template, 3, 1, \"div\", 11);\n        i0.ɵɵtemplate(19, DashboardComponent_div_19_Template, 3, 1, \"div\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"app-todocard\", 12);\n        i0.ɵɵlistener(\"deleteObj\", function DashboardComponent_Template_app_todocard_deleteObj_20_listener($event) {\n          return ctx.deleteTask($event);\n        })(\"editObj\", function DashboardComponent_Template_app_todocard_editObj_20_listener($event) {\n          return ctx.editTask($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(21, \"div\", 3);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngModel\", ctx.addTaskValue);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.addDueDate);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.addDueDate || !ctx.addTaskValue);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.addDueDate && ctx.addTaskValue);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"taskArray\", ctx.taskArr);\n      }\n    },\n    dependencies: [i3.NgIf, i4.DefaultValueAccessor, i4.NgControlStatus, i4.RequiredValidator, i4.NgModel, i5.TodoCardCompnent]\n  });\n  return DashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}