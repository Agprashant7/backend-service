{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/service/auth/auth.sevice\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../../service/common/toaster.service\";\nimport * as i5 from \"@angular/common\";\nfunction LoginComponent_div_9_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Enter Valid Email \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtemplate(1, LoginComponent_div_9_div_1_Template, 2, 0, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.loginForm.controls[\"email\"]);\n  }\n}\nfunction LoginComponent_div_14_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Password is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtemplate(1, LoginComponent_div_14_div_1_Template, 2, 0, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.loginForm.controls[\"password\"]);\n  }\n}\nfunction LoginComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.errorMessage, \" \");\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(fb, authService, router, toaster) {\n      this.fb = fb;\n      this.authService = authService;\n      this.router = router;\n      this.toaster = toaster;\n      this.errorMessage = '';\n      // this.myForm();\n    }\n\n    showToaster(type, message, title) {\n      this.toast = {\n        message: message,\n        title: title,\n        type: type,\n        ic: {\n          timeOut: 2500,\n          closeButton: true\n        }\n      };\n      this.toaster.showToast(this.toast);\n    }\n    ngOnInit() {\n      this.loginForm = new FormGroup({\n        email: new FormControl('', [Validators.required, Validators.email]),\n        password: new FormControl('', [Validators.required, Validators.minLength(4)])\n      });\n      localStorage.clear();\n    }\n    // myForm() {\n    //     this.loginForm = this.fb.group({\n    //     email: ['', [ Validators.required,Validators.email] ],\n    //     password: ['', Validators.required ,Validators.minLength(4)],\n    //     });\n    //  }\n    onSubmit() {\n      const email = this.loginForm.get('email').value;\n      const password = this.loginForm.get('password').value;\n      const data = {\n        email,\n        password\n      };\n      this.authService.login(data).subscribe(res => {\n        let successMessage = `Welcome ${res.body.user.firstName}`;\n        //  console.log(\"RESPONSE\",res.headers.get('auth'))\n        localStorage.setItem('token', res.headers.get('token'));\n        this.authService.isLoggedIn();\n        this.showToaster('success', successMessage, 'Success');\n        this.router.navigate(['/home']);\n      }, err => {\n        console.log(\"ERROR WHILE LOGGIN\", err.error.message);\n        this.errorMessage = err.error.message;\n        this.showToaster('error', err.error.message, 'Error');\n        //   alert(err)\n      });\n      // this.redirect()\n    }\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.ToasterService));\n  };\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 23,\n    vars: 5,\n    consts: [[1, \"container\", \"d-flex\", \"flex-column\", \"justify-content-center\", \"align-items-center\"], [1, \"shadow\", \"col-md-6\", \"my-auto\", \"p-4\"], [1, \"h1\", \"text-center\", \"mb-2\"], [3, \"formGroup\"], [1, \"form-floating\", \"mb-3\"], [\"type\", \"email\", \"id\", \"floatingInput\", \"formControlName\", \"email\", \"placeholder\", \"name@example.com\", 1, \"form-control\"], [\"for\", \"floatingInput\"], [\"class\", \"text-danger mt-3\", 4, \"ngIf\"], [\"type\", \"password\", \"id\", \"floatingPassword\", \"formControlName\", \"password\", \"placeholder\", \"Password\", 1, \"form-control\"], [\"for\", \"floatingPassword\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"flex-column\", \"d-flex\", \"align-items-center\", \"justify-content-center\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"], [\"routerLink\", \"/signup\"], [1, \"text-danger\", \"mt-3\"], [4, \"ngIf\"], [1, \"text-danger\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"p\", 2);\n        i0.ɵɵtext(3, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"form\", 3)(5, \"div\", 4);\n        i0.ɵɵelement(6, \"input\", 5);\n        i0.ɵɵelementStart(7, \"label\", 6);\n        i0.ɵɵtext(8, \"Email address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(9, LoginComponent_div_9_Template, 2, 1, \"div\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 4);\n        i0.ɵɵelement(11, \"input\", 8);\n        i0.ɵɵelementStart(12, \"label\", 9);\n        i0.ɵɵtext(13, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(14, LoginComponent_div_14_Template, 2, 1, \"div\", 7);\n        i0.ɵɵtemplate(15, LoginComponent_div_15_Template, 2, 1, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 11)(17, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_17_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵtext(18, \"Log In\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"p\");\n        i0.ɵɵtext(20, \" Not have a account?\");\n        i0.ɵɵelementStart(21, \"a\", 13);\n        i0.ɵɵtext(22, \"Sign Up\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"email\"].invalid && ctx.loginForm.controls[\"email\"].touched);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"password\"].invalid && ctx.loginForm.controls[\"password\"].touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n      }\n    },\n    dependencies: [i5.NgIf, i3.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}