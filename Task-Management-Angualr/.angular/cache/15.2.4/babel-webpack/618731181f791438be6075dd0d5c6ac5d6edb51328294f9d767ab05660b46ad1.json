{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CrudService {\n  createAuthorizationHeader(headers) {\n    headers.append('token', 'B' + this.token);\n  }\n  constructor(http) {\n    this.http = http;\n    this.token = localStorage.getItem('token');\n    this.serviceURL = 'https://643fd869b9e6d064be006110.mockapi.io/tasks/task';\n  }\n  addTasks(task) {\n    let headers = new Headers();\n    this.createAuthorizationHeader(headers);\n    return this.http.post('http://localhost:5000/task/addTask', task, {\n      headers: new HttpHeaders().set('Authorization', 'b' + this.token)\n    });\n  }\n  getAllTask() {\n    return this.http.get(this.serviceURL);\n  }\n  deleteTask(task) {\n    return this.http.delete(this.serviceURL + '/' + task.id);\n  }\n  editTask(task) {\n    return this.http.put(this.serviceURL + '/' + task.id, task);\n  }\n}\nCrudService.ɵfac = function CrudService_Factory(t) {\n  return new (t || CrudService)(i0.ɵɵinject(i1.HttpClient));\n};\nCrudService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CrudService,\n  factory: CrudService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAoBA,WAAW,QAAS,sBAAsB;;;AAS9D,OAAM,MAAOC,WAAW;EAEtBC,yBAAyB,CAACC,OAAgB;IACxCA,OAAO,CAACC,MAAM,CAAC,OAAO,EAAC,GAAG,GAAC,IAAI,CAACC,KAAK,CAAC;EACxC;EAEAC,YAAoBC,IAAe;IAAf,SAAI,GAAJA,IAAI;IALvB,UAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAMpC,IAAI,CAACC,UAAU,GAAC,wDAAwD;EAE1E;EAEAC,QAAQ,CAACC,IAAS;IACf,IAAIT,OAAO,GAAG,IAAIU,OAAO,EAAE;IAC5B,IAAI,CAACX,yBAAyB,CAACC,OAAO,CAAC;IACvC,OAAO,IAAI,CAACI,IAAI,CAACO,IAAI,CAAO,oCAAoC,EAACF,IAAI,EAAC;MACpET,OAAO,EAAE,IAAIH,WAAW,EAAE,CAACe,GAAG,CAAC,eAAe,EAAC,GAAG,GAAC,IAAI,CAACV,KAAK;KAChE,CAAC;EACF;EACAW,UAAU;IACR,OAAO,IAAI,CAACT,IAAI,CAACU,GAAG,CAAS,IAAI,CAACP,UAAU,CAAC;EAC/C;EACAQ,UAAU,CAACN,IAAS;IAClB,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAO,IAAI,CAACT,UAAU,GAAC,GAAG,GAACE,IAAI,CAACQ,EAAE,CAAC;EAC5D;EACAC,QAAQ,CAACT,IAAS;IAChB,OAAO,IAAI,CAACL,IAAI,CAACe,GAAG,CAAO,IAAI,CAACZ,UAAU,GAAC,GAAG,GAACE,IAAI,CAACQ,EAAE,EAACR,IAAI,CAAC;EAC9D;;AA1BWX,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAsB,SAAXtB,WAAW;EAAAuB,YAFV;AAAM","names":["HttpHeaders","CrudService","createAuthorizationHeader","headers","append","token","constructor","http","localStorage","getItem","serviceURL","addTasks","task","Headers","post","set","getAllTask","get","deleteTask","delete","id","editTask","put","factory","providedIn"],"sourceRoot":"","sources":["E:\\Prashant Ganiger\\Portfolio\\Task-Management-Angualr\\src\\app\\service\\crud\\crud.service.ts"],"sourcesContent":["import { HttpClient,HttpHeaders  } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Task } from '../../model/task';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CrudService {\r\n   token = localStorage.getItem('token');\r\n  createAuthorizationHeader(headers: Headers) {\r\n    headers.append('token','B'+this.token); \r\n  }\r\n  serviceURL:string;  \r\n  constructor(private http:HttpClient) { \r\n    this.serviceURL='https://643fd869b9e6d064be006110.mockapi.io/tasks/task'\r\n\r\n  }\r\n\r\n  addTasks(task:Task):Observable<Task>{\r\n     let headers = new Headers();\r\n    this.createAuthorizationHeader(headers);\r\n    return this.http.post<Task>('http://localhost:5000/task/addTask',task,{\r\n      headers: new HttpHeaders().set('Authorization','b'+this.token)\r\n  })\r\n  }\r\n  getAllTask():Observable<Task[]>{\r\n    return this.http.get<Task[]>(this.serviceURL)\r\n  }\r\n  deleteTask(task:Task):Observable<Task>{\r\n    return this.http.delete<Task>(this.serviceURL+'/'+task.id)\r\n  }\r\n  editTask(task:Task):Observable<Task>{\r\n    return this.http.put<Task>(this.serviceURL+'/'+task.id,task)\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}