{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(router, http) {\n    this.router = router;\n    this.http = http;\n    this.serviceURL = 'http://localhost:5000/api/signin';\n  }\n  login(data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      }),\n      observe: 'response'\n    };\n    // return  this.http.post<Login>(`${this.serviceURL}`,data, {observe: 'response' as 'body'})\n    // return this.http.post<Login>(`${this.serviceURL}`,data,this.httpOptions)\n    return this.http.post(`${this.serviceURL}`, data, {\n      observe: 'response'\n    });\n    // });\n  }\n\n  isLoggedIn() {\n    let token = localStorage.getItem('token');\n    // let password=localStorage.getItem('password');\n    return token ? true : false;\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,WAAW,QAAsB,sBAAsB;;;;AAQ5E,OAAM,MAAOC,WAAW;EAEpBC,YACYC,MAAc,EACdC,IAAe;IADf,WAAM,GAAND,MAAM;IACN,SAAI,GAAJC,IAAI;IAEZ,IAAI,CAACC,UAAU,GAAC,kCAAkC;EACtD;EAEAC,KAAK,CAACC,IAAW;IACb,MAAMC,WAAW,GAAG;MAChBC,OAAO,EAAE,IAAIT,WAAW,CAAC;QACvB,cAAc,EAAG;OAClB,CAAC;MACFU,OAAO,EAAE;KACZ;IACD;IACA;IACA,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAQ,GAAG,IAAI,CAACN,UAAU,EAAE,EAACE,IAAI,EAAE;MAACG,OAAO,EAAE;IAAoB,CAAC,CAAC;IAExF;EACJ;;EAEAE,UAAU;IACN,IAAIC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACzC;IACA,OAAOF,KAAK,GAAE,IAAI,GAAC,KAAK;EAC1B;;AA3BOZ,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAe,SAAXf,WAAW;EAAAgB,YAHR;AAAM","names":["HttpHeaders","AuthService","constructor","router","http","serviceURL","login","data","httpOptions","headers","observe","post","isLoggedIn","token","localStorage","getItem","factory","providedIn"],"sourceRoot":"","sources":["E:\\Prashant Ganiger\\Portfolio\\Task-Management-Angualr\\src\\app\\service\\auth\\auth.sevice.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Login } from 'src/app/model/login';\r\nimport { map } from 'rxjs/operators';\r\n@Injectable({\r\n    providedIn: 'root',\r\n  })\r\n\r\nexport class AuthService {\r\n    serviceURL:string; \r\n    constructor(\r\n        private router: Router,\r\n        private http:HttpClient\r\n    ) {\r\n        this.serviceURL='http://localhost:5000/api/signin'\r\n    }\r\n\r\n    login(data: Login):Observable<Login> {\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n              'Content-Type':  'application/json'\r\n            }),\r\n            observe: 'response'\r\n        };\r\n        // return  this.http.post<Login>(`${this.serviceURL}`,data, {observe: 'response' as 'body'})\r\n        // return this.http.post<Login>(`${this.serviceURL}`,data,this.httpOptions)\r\n        return this.http.post<Login>(`${this.serviceURL}`,data, {observe: 'response' as 'body'})\r\n      \r\n        // });\r\n    }\r\n    \r\n    isLoggedIn(): boolean {\r\n        let token = localStorage.getItem('token');\r\n        // let password=localStorage.getItem('password');\r\n        return token? true:false\r\n      }\r\n  }"]},"metadata":{},"sourceType":"module","externalDependencies":[]}