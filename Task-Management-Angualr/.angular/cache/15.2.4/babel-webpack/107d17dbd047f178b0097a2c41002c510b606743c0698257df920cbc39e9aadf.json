{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class AuthService {\n  constructor(router) {\n    this.router = router;\n  }\n  login(email, password) {\n    // this.authenticationClient.login(username, password).subscribe((token) => {\n    localStorage.setItem('email', email);\n    localStorage.setItem('password', password);\n    this.router.navigate(['/home']);\n    this.isLoggedIn();\n    // });\n  }\n\n  isLoggedIn() {\n    let email = localStorage.getItem('email');\n    let password = localStorage.getItem('password');\n    return email && password ? true : false;\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.Router));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,WAAW;EACpBC,YACYC,MAAc;IAAd,WAAM,GAANA,MAAM;EACf;EAEHC,KAAK,CAACC,KAAa,EAAEC,QAAgB;IACjC;IACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,KAAK,CAAC;IACpCE,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEF,QAAQ,CAAC;IAC1C,IAAI,CAACH,MAAM,CAACM,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IAC/B,IAAI,CAACC,UAAU,EAAE;IACjB;EACJ;;EAEAA,UAAU;IACN,IAAIL,KAAK,GAAGE,YAAY,CAACI,OAAO,CAAC,OAAO,CAAC;IACzC,IAAIL,QAAQ,GAACC,YAAY,CAACI,OAAO,CAAC,UAAU,CAAC;IAC7C,OAAON,KAAK,IAAIC,QAAQ,GAAG,IAAI,GAAC,KAAK;EACvC;;AAlBOL,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAW,SAAXX,WAAW;EAAAY,YAHR;AAAM","names":["AuthService","constructor","router","login","email","password","localStorage","setItem","navigate","isLoggedIn","getItem","factory","providedIn"],"sourceRoot":"","sources":["E:\\Prashant Ganiger\\Portfolio\\Task-Management-Angualr\\src\\app\\service\\auth\\auth.sevice.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n  })\r\n\r\nexport class AuthService {\r\n    constructor(\r\n        private router: Router\r\n    ) {}\r\n    \r\n    login(email: string, password: string): void {\r\n        // this.authenticationClient.login(username, password).subscribe((token) => {\r\n        localStorage.setItem('email', email);\r\n        localStorage.setItem('password', password);\r\n        this.router.navigate(['/home']);\r\n        this.isLoggedIn()\r\n        // });\r\n    }\r\n    \r\n    isLoggedIn(): boolean {\r\n        let email = localStorage.getItem('email');\r\n        let password=localStorage.getItem('password');\r\n        return email && password ? true:false\r\n      }\r\n  }"]},"metadata":{},"sourceType":"module","externalDependencies":[]}